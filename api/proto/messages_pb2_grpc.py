# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import messages_pb2 as messages__pb2


class GatewayStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ligarLampada = channel.unary_unary(
                '/Gateway/ligarLampada',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.desligarLampada = channel.unary_unary(
                '/Gateway/desligarLampada',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.obterStatusLampada = channel.unary_unary(
                '/Gateway/obterStatusLampada',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.ligarAr = channel.unary_unary(
                '/Gateway/ligarAr',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.desligarAr = channel.unary_unary(
                '/Gateway/desligarAr',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.obterStatusAr = channel.unary_unary(
                '/Gateway/obterStatusAr',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.ligarSom = channel.unary_unary(
                '/Gateway/ligarSom',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.desligarSom = channel.unary_unary(
                '/Gateway/desligarSom',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.obterStatusSom = channel.unary_unary(
                '/Gateway/obterStatusSom',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.aumentarTemperatura = channel.unary_unary(
                '/Gateway/aumentarTemperatura',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.diminuirTemperatura = channel.unary_unary(
                '/Gateway/diminuirTemperatura',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.obterTemperatura = channel.unary_unary(
                '/Gateway/obterTemperatura',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.aumentarVolume = channel.unary_unary(
                '/Gateway/aumentarVolume',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.diminuirVolume = channel.unary_unary(
                '/Gateway/diminuirVolume',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )
        self.obterVolume = channel.unary_unary(
                '/Gateway/obterVolume',
                request_serializer=messages__pb2.Empty.SerializeToString,
                response_deserializer=messages__pb2.Reply.FromString,
                )


class GatewayServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ligarLampada(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def desligarLampada(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def obterStatusLampada(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ligarAr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def desligarAr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def obterStatusAr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ligarSom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def desligarSom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def obterStatusSom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def aumentarTemperatura(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def diminuirTemperatura(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def obterTemperatura(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def aumentarVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def diminuirVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def obterVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewayServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ligarLampada': grpc.unary_unary_rpc_method_handler(
                    servicer.ligarLampada,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'desligarLampada': grpc.unary_unary_rpc_method_handler(
                    servicer.desligarLampada,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'obterStatusLampada': grpc.unary_unary_rpc_method_handler(
                    servicer.obterStatusLampada,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'ligarAr': grpc.unary_unary_rpc_method_handler(
                    servicer.ligarAr,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'desligarAr': grpc.unary_unary_rpc_method_handler(
                    servicer.desligarAr,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'obterStatusAr': grpc.unary_unary_rpc_method_handler(
                    servicer.obterStatusAr,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'ligarSom': grpc.unary_unary_rpc_method_handler(
                    servicer.ligarSom,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'desligarSom': grpc.unary_unary_rpc_method_handler(
                    servicer.desligarSom,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'obterStatusSom': grpc.unary_unary_rpc_method_handler(
                    servicer.obterStatusSom,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'aumentarTemperatura': grpc.unary_unary_rpc_method_handler(
                    servicer.aumentarTemperatura,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'diminuirTemperatura': grpc.unary_unary_rpc_method_handler(
                    servicer.diminuirTemperatura,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'obterTemperatura': grpc.unary_unary_rpc_method_handler(
                    servicer.obterTemperatura,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'aumentarVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.aumentarVolume,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'diminuirVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.diminuirVolume,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
            'obterVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.obterVolume,
                    request_deserializer=messages__pb2.Empty.FromString,
                    response_serializer=messages__pb2.Reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Gateway', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Gateway(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ligarLampada(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/ligarLampada',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def desligarLampada(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/desligarLampada',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def obterStatusLampada(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/obterStatusLampada',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ligarAr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/ligarAr',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def desligarAr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/desligarAr',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def obterStatusAr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/obterStatusAr',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ligarSom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/ligarSom',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def desligarSom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/desligarSom',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def obterStatusSom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/obterStatusSom',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def aumentarTemperatura(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/aumentarTemperatura',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def diminuirTemperatura(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/diminuirTemperatura',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def obterTemperatura(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/obterTemperatura',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def aumentarVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/aumentarVolume',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def diminuirVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/diminuirVolume',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def obterVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gateway/obterVolume',
            messages__pb2.Empty.SerializeToString,
            messages__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
